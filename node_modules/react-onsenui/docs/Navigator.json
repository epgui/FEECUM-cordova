{"description":"@original ons-navigator\n@category navigation\n@tutorial react/Reference/navigator\n@description\n[en] This component is responsible for page transitioning and managing the pages of your OnsenUI application. In order to manage to display the pages, the  navigator needs to define the `renderPage` method, that takes an route and a navigator and  converts it to an page.  [/en]\n[jp] どうしよう[/jp]\n@example\n  <Navigator\n    renderPage={(route, navigator) =>\n     <MyPage\n       title={route.title}\n       onPop={() => navigator.popPage()}\n       />\n    }\n    initialRoute={{\n        title: 'First Page'\n    }} />\n   }\n }","methods":[{"name":"update","docblock":null,"modifiers":[],"params":[{"name":"pages","type":null},{"name":"obj","type":null}],"returns":null},{"name":"resetPage","docblock":"@method resetPage\n@signature resetPage(route, options = {})\n@param {Object} route\n  [en] The route that the page should be reset to.[/en]\n  [ja] どうしよう [/ja]\n@return {Promise}\n  [en]Promise which resolves to the revealed page.[/en]\n  [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n@description\n  [en]Resets the current page[/en]\n  [ja]どうしよう[/ja]","modifiers":[],"params":[{"name":"route","description":"[en] The route that the page should be reset to.[/en]\n  [ja] どうしよう [/ja]","type":{"name":"Object"}},{"name":"options"}],"returns":{"description":"[en]Promise which resolves to the revealed page.[/en]\n  [ja]明らかにしたページを解決するPromiseを返します。[/ja]","type":{"name":"Promise"}},"description":null},{"name":"resetPageStack","docblock":"@method resetPageStack\n@signature resetPageStack(route, options = {})\n@param {Array} routes\n  [en] The routes that the navigator should be reset to.[/en]\n  [ja] どうしよう [/ja]\n@return {Promise}\n  [en]Promise which resolves to the revealed page.[/en]\n  [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n@description\n  [en] Resets the navigator to the current page stack[/en]\n  [ja] どうしよう[/ja]","modifiers":[],"params":[{"name":"routes","description":"[en] The routes that the navigator should be reset to.[/en]\n  [ja] どうしよう [/ja]","type":{"name":"Array"}},{"name":"options"}],"returns":{"description":"[en]Promise which resolves to the revealed page.[/en]\n  [ja]明らかにしたページを解決するPromiseを返します。[/ja]","type":{"name":"Promise"}},"description":null},{"name":"pushPage","docblock":"@method pushPage\n@signature pushPage(route, options = {})\n@param {Object} route\n  [en] The route that the navigator should push to.[/en]\n  [ja] どうしよう [/ja]\n@return {Promise}\n  [en] Promise which resolves to the revealed page.[/en]\n  [ja] 明らかにしたページを解決するPromiseを返します。[/ja]\n@description\n  [en] Pushes a page to the page stack[/en]\n  [ja] どうしよう[/ja]","modifiers":[],"params":[{"name":"route","description":"[en] The route that the navigator should push to.[/en]\n  [ja] どうしよう [/ja]","type":{"name":"Object"}},{"name":"options"}],"returns":{"description":"[en] Promise which resolves to the revealed page.[/en]\n  [ja] 明らかにしたページを解決するPromiseを返します。[/ja]","type":{"name":"Promise"}},"description":null},{"name":"isRunning","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"replacePage","docblock":null,"modifiers":[],"params":[{"name":"route","type":null},{"name":"options","type":null}],"returns":null},{"name":"popPage","docblock":"@method popPage\n@signature popPage(options = {})\n@return {Promise}\n  [en] Promise which resolves to the revealed page.[/en]\n  [ja] 明らかにしたページを解決するPromiseを返します。[/ja]\n@description\n  [en] Pops a page out of the page stack[/en]\n  [ja] どうしよう[/ja]","modifiers":[],"params":[{"name":"options"}],"returns":{"description":"[en] Promise which resolves to the revealed page.[/en]\n  [ja] 明らかにしたページを解決するPromiseを返します。[/ja]","type":{"name":"Promise"}},"description":null},{"name":"_prePop","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"_postPop","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"_prePush","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"_postPush","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"renderPage":{"type":{"name":"func"},"required":true,"description":"@name renderPage\n@type function\n@required true\n@defaultValue null\n@description\n [en] This function takes the current route object as a parameter and  creates returns a react componen.[/en]\n [jp] どうしよう[/jp]"},"initialRouteStack":{"type":{"name":"array"},"required":false,"description":"@name initialRouteStack\n@type array\n@required false\n@defaultValue null\n@description\n [en] This array contains the initial routes from the navigator,\n which will be used to render the initial pages in the renderPage method.\n [/en]\n [jp] どうしよう[/jp]"},"initialRoute":{"type":{"name":"object"},"required":false,"description":"@name initialRoute\n@type object\n@required false\n@defaultValue null\n@description\n [en] This array contains the initial route of the navigator,\n which will be used to render the initial pages in the\n renderPage method.\n [/en]\n [jp] どうしよう[/jp]"},"onPrePush":{"type":{"name":"func"},"required":false,"description":"@name onPrePush\n@type function\n@required false\n@description\n [en]Called just before a page is pushed.[/en]","defaultValue":{"value":"() => null","computed":false}},"onPostPush":{"type":{"name":"func"},"required":false,"description":"@name onPostPush\n@type function\n@required false\n@description\n [en]Called just after a page is pushed.[/en]","defaultValue":{"value":"() => null","computed":false}},"onPrePop":{"type":{"name":"func"},"required":false,"description":"@name onPrePop\n@type function\n@required false\n@description\n [en]Called just before a page is popped.[/en]","defaultValue":{"value":"() => null","computed":false}},"onPostPop":{"type":{"name":"func"},"required":false,"description":"@name onPostPop\n@type function\n@required false\n@description\n [en]Called just after a page is popped.[/en]","defaultValue":{"value":"() => null","computed":false}},"animation":{"type":{"name":"string"},"required":false,"description":"@property animation\n@type {String}\n@description\n  [en]\n    Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n    These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"`.\n  [/en]"},"animationOptions":{"type":{"name":"object"},"required":false,"description":"@name animationOptions\n@type object\n@description\n [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n [jp] [/jp]"}}}
