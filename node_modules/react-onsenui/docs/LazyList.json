{"description":"@original ons-lazy-repeat\n@category list\n@tutorial react/Reference/lazy-list\n@description\n[en] Using this component a list with millions of items can be rendered without a drop in performance.\n    It does that by \"lazily\" loading elements into the DOM when they come into view and\n    removing items from the DOM when they are not visible.\n [/en]\n[jp][/jp]\n@example\n\n  renderRow(index) {\n    return (\n      <ListItem key={index}>\n        {'Item ' + (index + 1)}\n      </ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <Page renderToolbar={() => <MyToolbar title='LazyList' />} >\n        <div style={{height: 100}}>\n          <LazyList\n            length={1000}\n            renderRow={() =>\n              <ListItem key={index}>\n                {'Item ' + (index + 1)}\n              </ListItem>\n            }\n            calculateItemHeight={() => 44}\n          />\n        </div>\n      </Page>\n    );\n  }\n}","methods":[{"name":"update","docblock":null,"modifiers":[],"params":[{"name":"props","type":null}],"returns":null}],"props":{"modifier":{"type":{"name":"string"},"required":false,"description":"@name modifier\n@type string\n@required false\n@description\n [en]The appearance of the lazy list.[/en]\n [jp] [/jp]"},"length":{"type":{"name":"number"},"required":true,"description":"@name length\n@type number\n@description\n [en]The length of the list.[/en]\n [jp] [/jp]"},"renderRow":{"type":{"name":"func"},"required":true,"description":"@name renderRow\n@type function\n@description\n [en] A function given the index of the to display row, renders it.[/en]\n [jp] [/jp]"},"calculateItemHeight":{"type":{"name":"func"},"required":true,"description":"@name calculateItemHeight\n@type function\n@description\n [en] A function given the index of the to row, returns the height of it.[/en]\n [jp] [/jp]"}}}
